"""
Chat interface components.
"""

import streamlit as st
from typing import List, Dict
from datetime import datetime

def format_message(message: Dict) -> str:
    """Format chat message with Markdown."""
    role_icons = {
        "user": "üë§",
        "assistant": "ü§ñ",
        "system": "‚öôÔ∏è"
    }
    
    icon = role_icons.get(message["role"], "‚ùî")
    timestamp = datetime.now().strftime("%H:%M")
    
    return f"{icon} **{message['role'].title()}** [{timestamp}]:\n{message['content']}"

def display_chat_history(messages: List[Dict]):
    """Display chat history with styling."""
    for msg in messages:
        with st.container():
            st.markdown(format_message(msg))
            st.divider()

def chat_input_area() -> str:
    """Render chat input area with styling."""
    return st.text_input(
        "–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –ø–æ –º–µ–¥–∏—Ü–∏–Ω–µ:",
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –û–ø–∏—à–∏—Ç–µ –ø–∞—Ç–æ–≥–µ–Ω–µ–∑ –±—Ä–æ–Ω—Ö–∏–∞–ª—å–Ω–æ–π –∞—Å—Ç–º—ã",
        key="chat_input"
    )

def display_citations(citations: List[Dict]):
    """Display search results and citations."""
    if not citations:
        return
        
    st.markdown("### üìö –ò—Å—Ç–æ—á–Ω–∏–∫–∏:")
    for citation in citations:
        with st.expander(f"üìñ {citation['metadata'].get('filename', '–ò—Å—Ç–æ—á–Ω–∏–∫')}"):
            st.markdown(f"**–†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å:** {citation['score']:.2f}")
            st.markdown(citation['text'])